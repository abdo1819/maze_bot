
ROBOT8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000a14  00000aa8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800062  00800062  00000aaa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000aaa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000adc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c6a  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000916  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000762  00000000  00000000  00002140  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  000028a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000427  00000000  00000000  00002a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005b3  00000000  00000000  00002ea7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000345a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3f c0       	rjmp	.+126    	; 0x80 <__ctors_end>
   2:	59 c0       	rjmp	.+178    	; 0xb6 <__bad_interrupt>
   4:	df c0       	rjmp	.+446    	; 0x1c4 <__vector_2>
   6:	57 c0       	rjmp	.+174    	; 0xb6 <__bad_interrupt>
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	55 c0       	rjmp	.+170    	; 0xb6 <__bad_interrupt>
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	53 c0       	rjmp	.+166    	; 0xb6 <__bad_interrupt>
  10:	29 c1       	rjmp	.+594    	; 0x264 <__vector_8>
  12:	51 c0       	rjmp	.+162    	; 0xb6 <__bad_interrupt>
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	4f c0       	rjmp	.+158    	; 0xb6 <__bad_interrupt>
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	4d c0       	rjmp	.+154    	; 0xb6 <__bad_interrupt>
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	4b c0       	rjmp	.+150    	; 0xb6 <__bad_interrupt>
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	49 c0       	rjmp	.+146    	; 0xb6 <__bad_interrupt>
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	08 00       	.word	0x0008	; ????
  28:	00 00       	nop
  2a:	be 92       	st	-X, r11
  2c:	24 49       	sbci	r18, 0x94	; 148
  2e:	12 3e       	cpi	r17, 0xE2	; 226
  30:	ab aa       	std	Y+51, r10	; 0x33
  32:	aa 2a       	or	r10, r26
  34:	be cd       	rjmp	.-1156   	; 0xfffffbb2 <__eeprom_end+0xff7efbb2>
  36:	cc cc       	rjmp	.-1640   	; 0xfffff9d0 <__eeprom_end+0xff7ef9d0>
  38:	4c 3e       	cpi	r20, 0xEC	; 236
  3a:	00 00       	nop
  3c:	00 80       	ld	r0, Z
  3e:	be ab       	std	Y+54, r27	; 0x36
  40:	aa aa       	std	Y+50, r10	; 0x32
  42:	aa 3e       	cpi	r26, 0xEA	; 234
  44:	00 00       	nop
  46:	00 00       	nop
  48:	bf 00       	.word	0x00bf	; ????
  4a:	00 00       	nop
  4c:	80 3f       	cpi	r24, 0xF0	; 240
  4e:	00 00       	nop
  50:	00 00       	nop
  52:	00 08       	sbc	r0, r0
  54:	41 78       	andi	r20, 0x81	; 129
  56:	d3 bb       	out	0x13, r29	; 19
  58:	43 87       	std	Z+11, r20	; 0x0b
  5a:	d1 13       	cpse	r29, r17
  5c:	3d 19       	sub	r19, r13
  5e:	0e 3c       	cpi	r16, 0xCE	; 206
  60:	c3 bd       	out	0x23, r28	; 35
  62:	42 82       	std	Z+2, r4	; 0x02
  64:	ad 2b       	or	r26, r29
  66:	3e 68       	ori	r19, 0x8E	; 142
  68:	ec 82       	std	Y+4, r14	; 0x04
  6a:	76 be       	out	0x36, r7	; 54
  6c:	d9 8f       	std	Y+25, r29	; 0x19
  6e:	e1 a9       	ldd	r30, Z+49	; 0x31
  70:	3e 4c       	sbci	r19, 0xCE	; 206
  72:	80 ef       	ldi	r24, 0xF0	; 240
  74:	ff be       	out	0x3f, r15	; 63
  76:	01 c4       	rjmp	.+2050   	; 0x87a <log+0x64>
  78:	ff 7f       	andi	r31, 0xFF	; 255
  7a:	3f 00       	.word	0x003f	; ????
  7c:	00 00       	nop
	...

00000080 <__ctors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf e5       	ldi	r28, 0x5F	; 95
  86:	d4 e0       	ldi	r29, 0x04	; 4
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
  8c:	10 e0       	ldi	r17, 0x00	; 0
  8e:	a0 e6       	ldi	r26, 0x60	; 96
  90:	b0 e0       	ldi	r27, 0x00	; 0
  92:	e4 e1       	ldi	r30, 0x14	; 20
  94:	fa e0       	ldi	r31, 0x0A	; 10
  96:	02 c0       	rjmp	.+4      	; 0x9c <__do_copy_data+0x10>
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0
  9c:	a2 36       	cpi	r26, 0x62	; 98
  9e:	b1 07       	cpc	r27, r17
  a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0xc>

000000a2 <__do_clear_bss>:
  a2:	20 e0       	ldi	r18, 0x00	; 0
  a4:	a2 e6       	ldi	r26, 0x62	; 98
  a6:	b0 e0       	ldi	r27, 0x00	; 0
  a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
  aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
  ac:	a8 36       	cpi	r26, 0x68	; 104
  ae:	b2 07       	cpc	r27, r18
  b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
  b2:	c9 d1       	rcall	.+914    	; 0x446 <main>
  b4:	ad c4       	rjmp	.+2394   	; 0xa10 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <start>:
  b8:	11 ba       	out	0x11, r1	; 17
  ba:	12 ba       	out	0x12, r1	; 18
  bc:	95 b7       	in	r25, 0x35	; 53
  be:	94 60       	ori	r25, 0x04	; 4
  c0:	95 bf       	out	0x35, r25	; 53
  c2:	9b b7       	in	r25, 0x3b	; 59
  c4:	90 68       	ori	r25, 0x80	; 128
  c6:	9b bf       	out	0x3b, r25	; 59
  c8:	91 b3       	in	r25, 0x11	; 17
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	08 2e       	mov	r0, r24
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <start+0x1e>
  d2:	22 0f       	add	r18, r18
  d4:	33 1f       	adc	r19, r19
  d6:	0a 94       	dec	r0
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <start+0x1a>
  da:	29 2b       	or	r18, r25
  dc:	21 bb       	out	0x11, r18	; 17
  de:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <trig_val>
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
  e8:	78 94       	sei
  ea:	08 95       	ret

000000ec <TRIG_SIGNAL>:
  ec:	42 b3       	in	r20, 0x12	; 18
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	9c 01       	movw	r18, r24
  f4:	00 90 61 00 	lds	r0, 0x0061	; 0x800061 <trig_val>
  f8:	02 c0       	rjmp	.+4      	; 0xfe <TRIG_SIGNAL+0x12>
  fa:	22 0f       	add	r18, r18
  fc:	33 1f       	adc	r19, r19
  fe:	0a 94       	dec	r0
 100:	e2 f7       	brpl	.-8      	; 0xfa <TRIG_SIGNAL+0xe>
 102:	24 2b       	or	r18, r20
 104:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 106:	23 e0       	ldi	r18, 0x03	; 3
 108:	2a 95       	dec	r18
 10a:	f1 f7       	brne	.-4      	; 0x108 <TRIG_SIGNAL+0x1c>
 10c:	00 00       	nop
 10e:	22 b3       	in	r18, 0x12	; 18
 110:	00 90 61 00 	lds	r0, 0x0061	; 0x800061 <trig_val>
 114:	02 c0       	rjmp	.+4      	; 0x11a <TRIG_SIGNAL+0x2e>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <TRIG_SIGNAL+0x2a>
 11e:	80 95       	com	r24
 120:	82 23       	and	r24, r18
 122:	82 bb       	out	0x12, r24	; 18
 124:	8a ef       	ldi	r24, 0xFA	; 250
 126:	8a 95       	dec	r24
 128:	f1 f7       	brne	.-4      	; 0x126 <TRIG_SIGNAL+0x3a>
 12a:	08 95       	ret

0000012c <MEASURE_IN_CM>:
 12c:	df df       	rcall	.-66     	; 0xec <TRIG_SIGNAL>
 12e:	07 c0       	rjmp	.+14     	; 0x13e <MEASURE_IN_CM+0x12>
 130:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 134:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
 138:	89 2b       	or	r24, r25
 13a:	09 f0       	breq	.+2      	; 0x13e <MEASURE_IN_CM+0x12>
 13c:	40 c0       	rjmp	.+128    	; 0x1be <MEASURE_IN_CM+0x92>
 13e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 142:	81 11       	cpse	r24, r1
 144:	0e c0       	rjmp	.+28     	; 0x162 <MEASURE_IN_CM+0x36>
 146:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <secs>
 14a:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <secs+0x1>
 14e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <secs+0x2>
 152:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <secs+0x3>
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	a9 01       	movw	r20, r18
 15c:	02 d2       	rcall	.+1028   	; 0x562 <__cmpsf2>
 15e:	88 23       	and	r24, r24
 160:	39 f3       	breq	.-50     	; 0x130 <MEASURE_IN_CM+0x4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	83 ed       	ldi	r24, 0xD3	; 211
 164:	90 e3       	ldi	r25, 0x30	; 48
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <MEASURE_IN_CM+0x3a>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <MEASURE_IN_CM+0x40>
 16c:	00 00       	nop
 16e:	1e bc       	out	0x2e, r1	; 46
 170:	21 b3       	in	r18, 0x11	; 17
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	00 90 61 00 	lds	r0, 0x0061	; 0x800061 <trig_val>
 17a:	02 c0       	rjmp	.+4      	; 0x180 <MEASURE_IN_CM+0x54>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	0a 94       	dec	r0
 182:	e2 f7       	brpl	.-8      	; 0x17c <MEASURE_IN_CM+0x50>
 184:	80 95       	com	r24
 186:	82 23       	and	r24, r18
 188:	81 bb       	out	0x11, r24	; 17
 18a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <secs>
 18e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <secs+0x1>
 192:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <secs+0x2>
 196:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <secs+0x3>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	5f e3       	ldi	r21, 0x3F	; 63
 1a2:	79 d3       	rcall	.+1778   	; 0x896 <__mulsf3>
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 e8       	ldi	r19, 0x80	; 128
 1a8:	4b ea       	ldi	r20, 0xAB	; 171
 1aa:	53 e4       	ldi	r21, 0x43	; 67
 1ac:	74 d3       	rcall	.+1768   	; 0x896 <__mulsf3>
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e4       	ldi	r19, 0x40	; 64
 1b2:	4c e1       	ldi	r20, 0x1C	; 28
 1b4:	56 e4       	ldi	r21, 0x46	; 70
 1b6:	d9 d1       	rcall	.+946    	; 0x56a <__divsf3>
 1b8:	45 d2       	rcall	.+1162   	; 0x644 <__fixunssfsi>
 1ba:	cb 01       	movw	r24, r22
 1bc:	08 95       	ret
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	08 95       	ret

000001c4 <__vector_2>:
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	2f 93       	push	r18
 1d0:	3f 93       	push	r19
 1d2:	4f 93       	push	r20
 1d4:	5f 93       	push	r21
 1d6:	6f 93       	push	r22
 1d8:	7f 93       	push	r23
 1da:	8f 93       	push	r24
 1dc:	9f 93       	push	r25
 1de:	af 93       	push	r26
 1e0:	bf 93       	push	r27
 1e2:	ef 93       	push	r30
 1e4:	ff 93       	push	r31
 1e6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 1ea:	81 30       	cpi	r24, 0x01	; 1
 1ec:	99 f4       	brne	.+38     	; 0x214 <__vector_2+0x50>
 1ee:	8e b5       	in	r24, 0x2e	; 46
 1f0:	81 60       	ori	r24, 0x01	; 1
 1f2:	8e bd       	out	0x2e, r24	; 46
 1f4:	89 b7       	in	r24, 0x39	; 57
 1f6:	84 60       	ori	r24, 0x04	; 4
 1f8:	89 bf       	out	0x39, r24	; 57
 1fa:	1d bc       	out	0x2d, r1	; 45
 1fc:	1c bc       	out	0x2c, r1	; 44
 1fe:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
 202:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <secs>
 206:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <secs+0x1>
 20a:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <secs+0x2>
 20e:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <secs+0x3>
 212:	17 c0       	rjmp	.+46     	; 0x242 <__vector_2+0x7e>
 214:	6c b5       	in	r22, 0x2c	; 44
 216:	7d b5       	in	r23, 0x2d	; 45
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	3f d2       	rcall	.+1150   	; 0x69c <__floatunsisf>
 21e:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <secs>
 222:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <secs+0x1>
 226:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <secs+0x2>
 22a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <secs+0x3>
 22e:	1e bc       	out	0x2e, r1	; 46
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
 236:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 23a:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 23e:	1d bc       	out	0x2d, r1	; 45
 240:	1c bc       	out	0x2c, r1	; 44
 242:	ff 91       	pop	r31
 244:	ef 91       	pop	r30
 246:	bf 91       	pop	r27
 248:	af 91       	pop	r26
 24a:	9f 91       	pop	r25
 24c:	8f 91       	pop	r24
 24e:	7f 91       	pop	r23
 250:	6f 91       	pop	r22
 252:	5f 91       	pop	r21
 254:	4f 91       	pop	r20
 256:	3f 91       	pop	r19
 258:	2f 91       	pop	r18
 25a:	0f 90       	pop	r0
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	0f 90       	pop	r0
 260:	1f 90       	pop	r1
 262:	18 95       	reti

00000264 <__vector_8>:
 264:	1f 92       	push	r1
 266:	0f 92       	push	r0
 268:	0f b6       	in	r0, 0x3f	; 63
 26a:	0f 92       	push	r0
 26c:	11 24       	eor	r1, r1
 26e:	8f 93       	push	r24
 270:	9f 93       	push	r25
 272:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 276:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
 27a:	01 96       	adiw	r24, 0x01	; 1
 27c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__data_end+0x1>
 280:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
 284:	1d bc       	out	0x2d, r1	; 45
 286:	1c bc       	out	0x2c, r1	; 44
 288:	8e b5       	in	r24, 0x2e	; 46
 28a:	81 60       	ori	r24, 0x01	; 1
 28c:	8e bd       	out	0x2e, r24	; 46
 28e:	a2 9a       	sbi	0x14, 2	; 20
 290:	95 b3       	in	r25, 0x15	; 21
 292:	84 e0       	ldi	r24, 0x04	; 4
 294:	89 27       	eor	r24, r25
 296:	85 bb       	out	0x15, r24	; 21
 298:	9f 91       	pop	r25
 29a:	8f 91       	pop	r24
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <cmd>:
	while (*p!='\0')
	{
		data(*p);
		p++;
	}
}
 2a6:	88 bb       	out	0x18, r24	; 24
 2a8:	15 ba       	out	0x15, r1	; 21
 2aa:	84 e0       	ldi	r24, 0x04	; 4
 2ac:	85 bb       	out	0x15, r24	; 21
 2ae:	8f e4       	ldi	r24, 0x4F	; 79
 2b0:	93 ec       	ldi	r25, 0xC3	; 195
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <cmd+0xc>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <cmd+0x12>
 2b8:	00 00       	nop
 2ba:	15 ba       	out	0x15, r1	; 21
 2bc:	08 95       	ret

000002be <init>:
 2be:	8f ef       	ldi	r24, 0xFF	; 255
 2c0:	84 bb       	out	0x14, r24	; 20
 2c2:	81 bb       	out	0x11, r24	; 17
 2c4:	88 e3       	ldi	r24, 0x38	; 56
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	ee df       	rcall	.-36     	; 0x2a6 <cmd>
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	eb df       	rcall	.-42     	; 0x2a6 <cmd>
 2d0:	80 e8       	ldi	r24, 0x80	; 128
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	e8 df       	rcall	.-48     	; 0x2a6 <cmd>
 2d6:	8e e0       	ldi	r24, 0x0E	; 14
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	e5 df       	rcall	.-54     	; 0x2a6 <cmd>
 2dc:	86 e0       	ldi	r24, 0x06	; 6
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	e2 df       	rcall	.-60     	; 0x2a6 <cmd>
 2e2:	08 95       	ret

000002e4 <data>:
 2e4:	88 bb       	out	0x18, r24	; 24
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	85 bb       	out	0x15, r24	; 21
 2ea:	95 e0       	ldi	r25, 0x05	; 5
 2ec:	95 bb       	out	0x15, r25	; 21
 2ee:	ef e4       	ldi	r30, 0x4F	; 79
 2f0:	f3 ec       	ldi	r31, 0xC3	; 195
 2f2:	31 97       	sbiw	r30, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <data+0xe>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <data+0x14>
 2f8:	00 00       	nop
 2fa:	85 bb       	out	0x15, r24	; 21
 2fc:	08 95       	ret

000002fe <reverse>:
	}
	if(put_zero){
		data(48);
	}
}
int reverse(int x){
 2fe:	8f 92       	push	r8
 300:	9f 92       	push	r9
 302:	af 92       	push	r10
 304:	bf 92       	push	r11
 306:	cf 92       	push	r12
 308:	df 92       	push	r13
 30a:	ef 92       	push	r14
 30c:	ff 92       	push	r15
 30e:	0f 93       	push	r16
 310:	1f 93       	push	r17
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	ec 01       	movw	r28, r24
	int i , reversed = 0, size = log10(x)+1;
 318:	bc 01       	movw	r22, r24
 31a:	99 0f       	add	r25, r25
 31c:	88 0b       	sbc	r24, r24
 31e:	99 0b       	sbc	r25, r25
 320:	bf d1       	rcall	.+894    	; 0x6a0 <__floatsisf>
 322:	6e d2       	rcall	.+1244   	; 0x800 <log10>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 e8       	ldi	r20, 0x80	; 128
 32a:	5f e3       	ldi	r21, 0x3F	; 63
 32c:	b6 d0       	rcall	.+364    	; 0x49a <__addsf3>
 32e:	85 d1       	rcall	.+778    	; 0x63a <__fixsfsi>
 330:	4b 01       	movw	r8, r22
 332:	5c 01       	movw	r10, r24
 334:	6b 01       	movw	r12, r22
	for (i = 0; i<size ;i++){
 336:	16 16       	cp	r1, r22
 338:	17 06       	cpc	r1, r23
 33a:	5c f5       	brge	.+86     	; 0x392 <reverse+0x94>
		reversed += x%10;
 33c:	ce 01       	movw	r24, r28
 33e:	6a e0       	ldi	r22, 0x0A	; 10
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	3f d3       	rcall	.+1662   	; 0x9c2 <__divmodhi4>
 344:	9c 01       	movw	r18, r24
		if (i==size-1){
 346:	74 01       	movw	r14, r8
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	e8 1a       	sub	r14, r24
 34c:	f1 08       	sbc	r15, r1
 34e:	19 f1       	breq	.+70     	; 0x396 <reverse+0x98>
 350:	e0 e0       	ldi	r30, 0x00	; 0
 352:	f0 e0       	ldi	r31, 0x00	; 0
			break;
		}
		reversed *= 10;
		x /= 10;
 354:	0a e0       	ldi	r16, 0x0A	; 10
 356:	10 e0       	ldi	r17, 0x00	; 0
 358:	08 c0       	rjmp	.+16     	; 0x36a <reverse+0x6c>
	}
}
int reverse(int x){
	int i , reversed = 0, size = log10(x)+1;
	for (i = 0; i<size ;i++){
		reversed += x%10;
 35a:	ce 01       	movw	r24, r28
 35c:	b8 01       	movw	r22, r16
 35e:	31 d3       	rcall	.+1634   	; 0x9c2 <__divmodhi4>
 360:	28 0f       	add	r18, r24
 362:	39 1f       	adc	r19, r25
		if (i==size-1){
 364:	ee 15       	cp	r30, r14
 366:	ff 05       	cpc	r31, r15
 368:	b1 f0       	breq	.+44     	; 0x396 <reverse+0x98>
			break;
		}
		reversed *= 10;
 36a:	c9 01       	movw	r24, r18
 36c:	88 0f       	add	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	22 0f       	add	r18, r18
 372:	33 1f       	adc	r19, r19
 374:	22 0f       	add	r18, r18
 376:	33 1f       	adc	r19, r19
 378:	22 0f       	add	r18, r18
 37a:	33 1f       	adc	r19, r19
 37c:	28 0f       	add	r18, r24
 37e:	39 1f       	adc	r19, r25
		x /= 10;
 380:	ce 01       	movw	r24, r28
 382:	b8 01       	movw	r22, r16
 384:	1e d3       	rcall	.+1596   	; 0x9c2 <__divmodhi4>
 386:	eb 01       	movw	r28, r22
		data(48);
	}
}
int reverse(int x){
	int i , reversed = 0, size = log10(x)+1;
	for (i = 0; i<size ;i++){
 388:	31 96       	adiw	r30, 0x01	; 1
 38a:	ec 15       	cp	r30, r12
 38c:	fd 05       	cpc	r31, r13
 38e:	29 f7       	brne	.-54     	; 0x35a <reverse+0x5c>
 390:	02 c0       	rjmp	.+4      	; 0x396 <reverse+0x98>
	if(put_zero){
		data(48);
	}
}
int reverse(int x){
	int i , reversed = 0, size = log10(x)+1;
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	30 e0       	ldi	r19, 0x00	; 0
		}
		reversed *= 10;
		x /= 10;
	}
	return reversed ;
 396:	c9 01       	movw	r24, r18
 398:	df 91       	pop	r29
 39a:	cf 91       	pop	r28
 39c:	1f 91       	pop	r17
 39e:	0f 91       	pop	r16
 3a0:	ff 90       	pop	r15
 3a2:	ef 90       	pop	r14
 3a4:	df 90       	pop	r13
 3a6:	cf 90       	pop	r12
 3a8:	bf 90       	pop	r11
 3aa:	af 90       	pop	r10
 3ac:	9f 90       	pop	r9
 3ae:	8f 90       	pop	r8
 3b0:	08 95       	ret

000003b2 <display_int>:
		data(*p);
		p++;
	}
}

void display_int(int value){
 3b2:	8f 92       	push	r8
 3b4:	9f 92       	push	r9
 3b6:	af 92       	push	r10
 3b8:	bf 92       	push	r11
 3ba:	cf 92       	push	r12
 3bc:	df 92       	push	r13
 3be:	ef 92       	push	r14
 3c0:	ff 92       	push	r15
 3c2:	0f 93       	push	r16
 3c4:	1f 93       	push	r17
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	9c 01       	movw	r18, r24
	int put_zero = 0;
	if ((value%10)==0){
 3cc:	6a e0       	ldi	r22, 0x0A	; 10
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	f8 d2       	rcall	.+1520   	; 0x9c2 <__divmodhi4>
 3d2:	4c 01       	movw	r8, r24
		put_zero = 1;
	}
	
	value = reverse(value);
 3d4:	c9 01       	movw	r24, r18
 3d6:	93 df       	rcall	.-218    	; 0x2fe <reverse>
 3d8:	ec 01       	movw	r28, r24
	
	int i ,size  = log10(value)+1;
 3da:	bc 01       	movw	r22, r24
 3dc:	99 0f       	add	r25, r25
 3de:	88 0b       	sbc	r24, r24
 3e0:	99 0b       	sbc	r25, r25
 3e2:	5e d1       	rcall	.+700    	; 0x6a0 <__floatsisf>
 3e4:	0d d2       	rcall	.+1050   	; 0x800 <log10>
 3e6:	20 e0       	ldi	r18, 0x00	; 0
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	40 e8       	ldi	r20, 0x80	; 128
 3ec:	5f e3       	ldi	r21, 0x3F	; 63
 3ee:	55 d0       	rcall	.+170    	; 0x49a <__addsf3>
 3f0:	24 d1       	rcall	.+584    	; 0x63a <__fixsfsi>
 3f2:	6b 01       	movw	r12, r22
	for (i=0;i<size;i++){
 3f4:	16 16       	cp	r1, r22
 3f6:	17 06       	cpc	r1, r23
 3f8:	ac f4       	brge	.+42     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3fa:	00 e0       	ldi	r16, 0x00	; 0
 3fc:	10 e0       	ldi	r17, 0x00	; 0
		data(value%10+48);
 3fe:	0f 2e       	mov	r0, r31
 400:	fa e0       	ldi	r31, 0x0A	; 10
 402:	af 2e       	mov	r10, r31
 404:	b1 2c       	mov	r11, r1
 406:	f0 2d       	mov	r31, r0
 408:	ce 01       	movw	r24, r28
 40a:	b5 01       	movw	r22, r10
 40c:	da d2       	rcall	.+1460   	; 0x9c2 <__divmodhi4>
 40e:	e6 2e       	mov	r14, r22
 410:	f7 2e       	mov	r15, r23
 412:	80 5d       	subi	r24, 0xD0	; 208
 414:	67 df       	rcall	.-306    	; 0x2e4 <data>
		value = value/10;
 416:	ce 2d       	mov	r28, r14
 418:	df 2d       	mov	r29, r15
	}
	
	value = reverse(value);
	
	int i ,size  = log10(value)+1;
	for (i=0;i<size;i++){
 41a:	0f 5f       	subi	r16, 0xFF	; 255
 41c:	1f 4f       	sbci	r17, 0xFF	; 255
 41e:	0c 15       	cp	r16, r12
 420:	1d 05       	cpc	r17, r13
 422:	91 f7       	brne	.-28     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		data(value%10+48);
		value = value/10;
	}
	if(put_zero){
 424:	89 28       	or	r8, r9
 426:	11 f4       	brne	.+4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
		data(48);
 428:	80 e3       	ldi	r24, 0x30	; 48
 42a:	5c df       	rcall	.-328    	; 0x2e4 <data>
	}
}
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	1f 91       	pop	r17
 432:	0f 91       	pop	r16
 434:	ff 90       	pop	r15
 436:	ef 90       	pop	r14
 438:	df 90       	pop	r13
 43a:	cf 90       	pop	r12
 43c:	bf 90       	pop	r11
 43e:	af 90       	pop	r10
 440:	9f 90       	pop	r9
 442:	8f 90       	pop	r8
 444:	08 95       	ret

00000446 <main>:

int main(void)
{     
	  uint16_t RIGHT=0;
	  uint16_t LEFT=0;
	DDRD=0;
 446:	11 ba       	out	0x11, r1	; 17
	PORTD|=1<<PD3;
 448:	93 9a       	sbi	0x12, 3	; 18

    while (1) 
    {

		
		start(PORTD1);
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	35 de       	rcall	.-918    	; 0xb8 <start>
		LEFT=MEASURE_IN_CM();
 44e:	6e de       	rcall	.-804    	; 0x12c <MEASURE_IN_CM>
 450:	ec 01       	movw	r28, r24
		  

	DDRC |= (1<<3)|(1<<4);
 452:	84 b3       	in	r24, 0x14	; 20
 454:	88 61       	ori	r24, 0x18	; 24
 456:	84 bb       	out	0x14, r24	; 20
	
	if (LEFT >200 & LEFT<700 )
 458:	ce 01       	movw	r24, r28
 45a:	89 5c       	subi	r24, 0xC9	; 201
 45c:	91 09       	sbc	r25, r1
 45e:	83 3f       	cpi	r24, 0xF3	; 243
 460:	91 40       	sbci	r25, 0x01	; 1
 462:	18 f4       	brcc	.+6      	; 0x46a <__stack+0xb>
	{
		PORTC |= (1<<3)|(1<<4);
 464:	85 b3       	in	r24, 0x15	; 21
 466:	88 61       	ori	r24, 0x18	; 24
 468:	85 bb       	out	0x15, r24	; 21
	}
	if(LEFT >700)
 46a:	cd 3b       	cpi	r28, 0xBD	; 189
 46c:	82 e0       	ldi	r24, 0x02	; 2
 46e:	d8 07       	cpc	r29, r24
 470:	18 f0       	brcs	.+6      	; 0x478 <__stack+0x19>
	{
		PORTC &= ~(1<<3) & ~(1<<4);
 472:	85 b3       	in	r24, 0x15	; 21
 474:	87 7e       	andi	r24, 0xE7	; 231
 476:	85 bb       	out	0x15, r24	; 21
 478:	83 ed       	ldi	r24, 0xD3	; 211
 47a:	90 e3       	ldi	r25, 0x30	; 48
 47c:	01 97       	sbiw	r24, 0x01	; 1
 47e:	f1 f7       	brne	.-4      	; 0x47c <__stack+0x1d>
 480:	00 c0       	rjmp	.+0      	; 0x482 <__stack+0x23>
 482:	00 00       	nop
	}

		_delay_ms(50);		 
		 init();
 484:	1c df       	rcall	.-456    	; 0x2be <init>
		 display_int(LEFT);
 486:	ce 01       	movw	r24, r28
 488:	94 df       	rcall	.-216    	; 0x3b2 <display_int>
 48a:	83 ec       	ldi	r24, 0xC3	; 195
 48c:	99 e0       	ldi	r25, 0x09	; 9
 48e:	01 97       	sbiw	r24, 0x01	; 1
 490:	f1 f7       	brne	.-4      	; 0x48e <__stack+0x2f>
 492:	00 c0       	rjmp	.+0      	; 0x494 <__stack+0x35>
 494:	00 00       	nop
 496:	d9 cf       	rjmp	.-78     	; 0x44a <main+0x4>

00000498 <__subsf3>:
 498:	50 58       	subi	r21, 0x80	; 128

0000049a <__addsf3>:
 49a:	bb 27       	eor	r27, r27
 49c:	aa 27       	eor	r26, r26
 49e:	0e d0       	rcall	.+28     	; 0x4bc <__addsf3x>
 4a0:	75 c1       	rjmp	.+746    	; 0x78c <__fp_round>
 4a2:	66 d1       	rcall	.+716    	; 0x770 <__fp_pscA>
 4a4:	30 f0       	brcs	.+12     	; 0x4b2 <__addsf3+0x18>
 4a6:	6b d1       	rcall	.+726    	; 0x77e <__fp_pscB>
 4a8:	20 f0       	brcs	.+8      	; 0x4b2 <__addsf3+0x18>
 4aa:	31 f4       	brne	.+12     	; 0x4b8 <__addsf3+0x1e>
 4ac:	9f 3f       	cpi	r25, 0xFF	; 255
 4ae:	11 f4       	brne	.+4      	; 0x4b4 <__addsf3+0x1a>
 4b0:	1e f4       	brtc	.+6      	; 0x4b8 <__addsf3+0x1e>
 4b2:	5b c1       	rjmp	.+694    	; 0x76a <__fp_nan>
 4b4:	0e f4       	brtc	.+2      	; 0x4b8 <__addsf3+0x1e>
 4b6:	e0 95       	com	r30
 4b8:	e7 fb       	bst	r30, 7
 4ba:	51 c1       	rjmp	.+674    	; 0x75e <__fp_inf>

000004bc <__addsf3x>:
 4bc:	e9 2f       	mov	r30, r25
 4be:	77 d1       	rcall	.+750    	; 0x7ae <__fp_split3>
 4c0:	80 f3       	brcs	.-32     	; 0x4a2 <__addsf3+0x8>
 4c2:	ba 17       	cp	r27, r26
 4c4:	62 07       	cpc	r22, r18
 4c6:	73 07       	cpc	r23, r19
 4c8:	84 07       	cpc	r24, r20
 4ca:	95 07       	cpc	r25, r21
 4cc:	18 f0       	brcs	.+6      	; 0x4d4 <__addsf3x+0x18>
 4ce:	71 f4       	brne	.+28     	; 0x4ec <__addsf3x+0x30>
 4d0:	9e f5       	brtc	.+102    	; 0x538 <__addsf3x+0x7c>
 4d2:	8f c1       	rjmp	.+798    	; 0x7f2 <__fp_zero>
 4d4:	0e f4       	brtc	.+2      	; 0x4d8 <__addsf3x+0x1c>
 4d6:	e0 95       	com	r30
 4d8:	0b 2e       	mov	r0, r27
 4da:	ba 2f       	mov	r27, r26
 4dc:	a0 2d       	mov	r26, r0
 4de:	0b 01       	movw	r0, r22
 4e0:	b9 01       	movw	r22, r18
 4e2:	90 01       	movw	r18, r0
 4e4:	0c 01       	movw	r0, r24
 4e6:	ca 01       	movw	r24, r20
 4e8:	a0 01       	movw	r20, r0
 4ea:	11 24       	eor	r1, r1
 4ec:	ff 27       	eor	r31, r31
 4ee:	59 1b       	sub	r21, r25
 4f0:	99 f0       	breq	.+38     	; 0x518 <__addsf3x+0x5c>
 4f2:	59 3f       	cpi	r21, 0xF9	; 249
 4f4:	50 f4       	brcc	.+20     	; 0x50a <__addsf3x+0x4e>
 4f6:	50 3e       	cpi	r21, 0xE0	; 224
 4f8:	68 f1       	brcs	.+90     	; 0x554 <__addsf3x+0x98>
 4fa:	1a 16       	cp	r1, r26
 4fc:	f0 40       	sbci	r31, 0x00	; 0
 4fe:	a2 2f       	mov	r26, r18
 500:	23 2f       	mov	r18, r19
 502:	34 2f       	mov	r19, r20
 504:	44 27       	eor	r20, r20
 506:	58 5f       	subi	r21, 0xF8	; 248
 508:	f3 cf       	rjmp	.-26     	; 0x4f0 <__addsf3x+0x34>
 50a:	46 95       	lsr	r20
 50c:	37 95       	ror	r19
 50e:	27 95       	ror	r18
 510:	a7 95       	ror	r26
 512:	f0 40       	sbci	r31, 0x00	; 0
 514:	53 95       	inc	r21
 516:	c9 f7       	brne	.-14     	; 0x50a <__addsf3x+0x4e>
 518:	7e f4       	brtc	.+30     	; 0x538 <__addsf3x+0x7c>
 51a:	1f 16       	cp	r1, r31
 51c:	ba 0b       	sbc	r27, r26
 51e:	62 0b       	sbc	r22, r18
 520:	73 0b       	sbc	r23, r19
 522:	84 0b       	sbc	r24, r20
 524:	ba f0       	brmi	.+46     	; 0x554 <__addsf3x+0x98>
 526:	91 50       	subi	r25, 0x01	; 1
 528:	a1 f0       	breq	.+40     	; 0x552 <__addsf3x+0x96>
 52a:	ff 0f       	add	r31, r31
 52c:	bb 1f       	adc	r27, r27
 52e:	66 1f       	adc	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	c2 f7       	brpl	.-16     	; 0x526 <__addsf3x+0x6a>
 536:	0e c0       	rjmp	.+28     	; 0x554 <__addsf3x+0x98>
 538:	ba 0f       	add	r27, r26
 53a:	62 1f       	adc	r22, r18
 53c:	73 1f       	adc	r23, r19
 53e:	84 1f       	adc	r24, r20
 540:	48 f4       	brcc	.+18     	; 0x554 <__addsf3x+0x98>
 542:	87 95       	ror	r24
 544:	77 95       	ror	r23
 546:	67 95       	ror	r22
 548:	b7 95       	ror	r27
 54a:	f7 95       	ror	r31
 54c:	9e 3f       	cpi	r25, 0xFE	; 254
 54e:	08 f0       	brcs	.+2      	; 0x552 <__addsf3x+0x96>
 550:	b3 cf       	rjmp	.-154    	; 0x4b8 <__addsf3+0x1e>
 552:	93 95       	inc	r25
 554:	88 0f       	add	r24, r24
 556:	08 f0       	brcs	.+2      	; 0x55a <__addsf3x+0x9e>
 558:	99 27       	eor	r25, r25
 55a:	ee 0f       	add	r30, r30
 55c:	97 95       	ror	r25
 55e:	87 95       	ror	r24
 560:	08 95       	ret

00000562 <__cmpsf2>:
 562:	d9 d0       	rcall	.+434    	; 0x716 <__fp_cmp>
 564:	08 f4       	brcc	.+2      	; 0x568 <__cmpsf2+0x6>
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	08 95       	ret

0000056a <__divsf3>:
 56a:	0c d0       	rcall	.+24     	; 0x584 <__divsf3x>
 56c:	0f c1       	rjmp	.+542    	; 0x78c <__fp_round>
 56e:	07 d1       	rcall	.+526    	; 0x77e <__fp_pscB>
 570:	40 f0       	brcs	.+16     	; 0x582 <__divsf3+0x18>
 572:	fe d0       	rcall	.+508    	; 0x770 <__fp_pscA>
 574:	30 f0       	brcs	.+12     	; 0x582 <__divsf3+0x18>
 576:	21 f4       	brne	.+8      	; 0x580 <__divsf3+0x16>
 578:	5f 3f       	cpi	r21, 0xFF	; 255
 57a:	19 f0       	breq	.+6      	; 0x582 <__divsf3+0x18>
 57c:	f0 c0       	rjmp	.+480    	; 0x75e <__fp_inf>
 57e:	51 11       	cpse	r21, r1
 580:	39 c1       	rjmp	.+626    	; 0x7f4 <__fp_szero>
 582:	f3 c0       	rjmp	.+486    	; 0x76a <__fp_nan>

00000584 <__divsf3x>:
 584:	14 d1       	rcall	.+552    	; 0x7ae <__fp_split3>
 586:	98 f3       	brcs	.-26     	; 0x56e <__divsf3+0x4>

00000588 <__divsf3_pse>:
 588:	99 23       	and	r25, r25
 58a:	c9 f3       	breq	.-14     	; 0x57e <__divsf3+0x14>
 58c:	55 23       	and	r21, r21
 58e:	b1 f3       	breq	.-20     	; 0x57c <__divsf3+0x12>
 590:	95 1b       	sub	r25, r21
 592:	55 0b       	sbc	r21, r21
 594:	bb 27       	eor	r27, r27
 596:	aa 27       	eor	r26, r26
 598:	62 17       	cp	r22, r18
 59a:	73 07       	cpc	r23, r19
 59c:	84 07       	cpc	r24, r20
 59e:	38 f0       	brcs	.+14     	; 0x5ae <__divsf3_pse+0x26>
 5a0:	9f 5f       	subi	r25, 0xFF	; 255
 5a2:	5f 4f       	sbci	r21, 0xFF	; 255
 5a4:	22 0f       	add	r18, r18
 5a6:	33 1f       	adc	r19, r19
 5a8:	44 1f       	adc	r20, r20
 5aa:	aa 1f       	adc	r26, r26
 5ac:	a9 f3       	breq	.-22     	; 0x598 <__divsf3_pse+0x10>
 5ae:	33 d0       	rcall	.+102    	; 0x616 <__divsf3_pse+0x8e>
 5b0:	0e 2e       	mov	r0, r30
 5b2:	3a f0       	brmi	.+14     	; 0x5c2 <__divsf3_pse+0x3a>
 5b4:	e0 e8       	ldi	r30, 0x80	; 128
 5b6:	30 d0       	rcall	.+96     	; 0x618 <__divsf3_pse+0x90>
 5b8:	91 50       	subi	r25, 0x01	; 1
 5ba:	50 40       	sbci	r21, 0x00	; 0
 5bc:	e6 95       	lsr	r30
 5be:	00 1c       	adc	r0, r0
 5c0:	ca f7       	brpl	.-14     	; 0x5b4 <__divsf3_pse+0x2c>
 5c2:	29 d0       	rcall	.+82     	; 0x616 <__divsf3_pse+0x8e>
 5c4:	fe 2f       	mov	r31, r30
 5c6:	27 d0       	rcall	.+78     	; 0x616 <__divsf3_pse+0x8e>
 5c8:	66 0f       	add	r22, r22
 5ca:	77 1f       	adc	r23, r23
 5cc:	88 1f       	adc	r24, r24
 5ce:	bb 1f       	adc	r27, r27
 5d0:	26 17       	cp	r18, r22
 5d2:	37 07       	cpc	r19, r23
 5d4:	48 07       	cpc	r20, r24
 5d6:	ab 07       	cpc	r26, r27
 5d8:	b0 e8       	ldi	r27, 0x80	; 128
 5da:	09 f0       	breq	.+2      	; 0x5de <__divsf3_pse+0x56>
 5dc:	bb 0b       	sbc	r27, r27
 5de:	80 2d       	mov	r24, r0
 5e0:	bf 01       	movw	r22, r30
 5e2:	ff 27       	eor	r31, r31
 5e4:	93 58       	subi	r25, 0x83	; 131
 5e6:	5f 4f       	sbci	r21, 0xFF	; 255
 5e8:	2a f0       	brmi	.+10     	; 0x5f4 <__divsf3_pse+0x6c>
 5ea:	9e 3f       	cpi	r25, 0xFE	; 254
 5ec:	51 05       	cpc	r21, r1
 5ee:	68 f0       	brcs	.+26     	; 0x60a <__divsf3_pse+0x82>
 5f0:	b6 c0       	rjmp	.+364    	; 0x75e <__fp_inf>
 5f2:	00 c1       	rjmp	.+512    	; 0x7f4 <__fp_szero>
 5f4:	5f 3f       	cpi	r21, 0xFF	; 255
 5f6:	ec f3       	brlt	.-6      	; 0x5f2 <__divsf3_pse+0x6a>
 5f8:	98 3e       	cpi	r25, 0xE8	; 232
 5fa:	dc f3       	brlt	.-10     	; 0x5f2 <__divsf3_pse+0x6a>
 5fc:	86 95       	lsr	r24
 5fe:	77 95       	ror	r23
 600:	67 95       	ror	r22
 602:	b7 95       	ror	r27
 604:	f7 95       	ror	r31
 606:	9f 5f       	subi	r25, 0xFF	; 255
 608:	c9 f7       	brne	.-14     	; 0x5fc <__divsf3_pse+0x74>
 60a:	88 0f       	add	r24, r24
 60c:	91 1d       	adc	r25, r1
 60e:	96 95       	lsr	r25
 610:	87 95       	ror	r24
 612:	97 f9       	bld	r25, 7
 614:	08 95       	ret
 616:	e1 e0       	ldi	r30, 0x01	; 1
 618:	66 0f       	add	r22, r22
 61a:	77 1f       	adc	r23, r23
 61c:	88 1f       	adc	r24, r24
 61e:	bb 1f       	adc	r27, r27
 620:	62 17       	cp	r22, r18
 622:	73 07       	cpc	r23, r19
 624:	84 07       	cpc	r24, r20
 626:	ba 07       	cpc	r27, r26
 628:	20 f0       	brcs	.+8      	; 0x632 <__divsf3_pse+0xaa>
 62a:	62 1b       	sub	r22, r18
 62c:	73 0b       	sbc	r23, r19
 62e:	84 0b       	sbc	r24, r20
 630:	ba 0b       	sbc	r27, r26
 632:	ee 1f       	adc	r30, r30
 634:	88 f7       	brcc	.-30     	; 0x618 <__divsf3_pse+0x90>
 636:	e0 95       	com	r30
 638:	08 95       	ret

0000063a <__fixsfsi>:
 63a:	04 d0       	rcall	.+8      	; 0x644 <__fixunssfsi>
 63c:	68 94       	set
 63e:	b1 11       	cpse	r27, r1
 640:	d9 c0       	rjmp	.+434    	; 0x7f4 <__fp_szero>
 642:	08 95       	ret

00000644 <__fixunssfsi>:
 644:	bc d0       	rcall	.+376    	; 0x7be <__fp_splitA>
 646:	88 f0       	brcs	.+34     	; 0x66a <__fixunssfsi+0x26>
 648:	9f 57       	subi	r25, 0x7F	; 127
 64a:	90 f0       	brcs	.+36     	; 0x670 <__fixunssfsi+0x2c>
 64c:	b9 2f       	mov	r27, r25
 64e:	99 27       	eor	r25, r25
 650:	b7 51       	subi	r27, 0x17	; 23
 652:	a0 f0       	brcs	.+40     	; 0x67c <__fixunssfsi+0x38>
 654:	d1 f0       	breq	.+52     	; 0x68a <__fixunssfsi+0x46>
 656:	66 0f       	add	r22, r22
 658:	77 1f       	adc	r23, r23
 65a:	88 1f       	adc	r24, r24
 65c:	99 1f       	adc	r25, r25
 65e:	1a f0       	brmi	.+6      	; 0x666 <__fixunssfsi+0x22>
 660:	ba 95       	dec	r27
 662:	c9 f7       	brne	.-14     	; 0x656 <__fixunssfsi+0x12>
 664:	12 c0       	rjmp	.+36     	; 0x68a <__fixunssfsi+0x46>
 666:	b1 30       	cpi	r27, 0x01	; 1
 668:	81 f0       	breq	.+32     	; 0x68a <__fixunssfsi+0x46>
 66a:	c3 d0       	rcall	.+390    	; 0x7f2 <__fp_zero>
 66c:	b1 e0       	ldi	r27, 0x01	; 1
 66e:	08 95       	ret
 670:	c0 c0       	rjmp	.+384    	; 0x7f2 <__fp_zero>
 672:	67 2f       	mov	r22, r23
 674:	78 2f       	mov	r23, r24
 676:	88 27       	eor	r24, r24
 678:	b8 5f       	subi	r27, 0xF8	; 248
 67a:	39 f0       	breq	.+14     	; 0x68a <__fixunssfsi+0x46>
 67c:	b9 3f       	cpi	r27, 0xF9	; 249
 67e:	cc f3       	brlt	.-14     	; 0x672 <__fixunssfsi+0x2e>
 680:	86 95       	lsr	r24
 682:	77 95       	ror	r23
 684:	67 95       	ror	r22
 686:	b3 95       	inc	r27
 688:	d9 f7       	brne	.-10     	; 0x680 <__fixunssfsi+0x3c>
 68a:	3e f4       	brtc	.+14     	; 0x69a <__fixunssfsi+0x56>
 68c:	90 95       	com	r25
 68e:	80 95       	com	r24
 690:	70 95       	com	r23
 692:	61 95       	neg	r22
 694:	7f 4f       	sbci	r23, 0xFF	; 255
 696:	8f 4f       	sbci	r24, 0xFF	; 255
 698:	9f 4f       	sbci	r25, 0xFF	; 255
 69a:	08 95       	ret

0000069c <__floatunsisf>:
 69c:	e8 94       	clt
 69e:	09 c0       	rjmp	.+18     	; 0x6b2 <__floatsisf+0x12>

000006a0 <__floatsisf>:
 6a0:	97 fb       	bst	r25, 7
 6a2:	3e f4       	brtc	.+14     	; 0x6b2 <__floatsisf+0x12>
 6a4:	90 95       	com	r25
 6a6:	80 95       	com	r24
 6a8:	70 95       	com	r23
 6aa:	61 95       	neg	r22
 6ac:	7f 4f       	sbci	r23, 0xFF	; 255
 6ae:	8f 4f       	sbci	r24, 0xFF	; 255
 6b0:	9f 4f       	sbci	r25, 0xFF	; 255
 6b2:	99 23       	and	r25, r25
 6b4:	a9 f0       	breq	.+42     	; 0x6e0 <__floatsisf+0x40>
 6b6:	f9 2f       	mov	r31, r25
 6b8:	96 e9       	ldi	r25, 0x96	; 150
 6ba:	bb 27       	eor	r27, r27
 6bc:	93 95       	inc	r25
 6be:	f6 95       	lsr	r31
 6c0:	87 95       	ror	r24
 6c2:	77 95       	ror	r23
 6c4:	67 95       	ror	r22
 6c6:	b7 95       	ror	r27
 6c8:	f1 11       	cpse	r31, r1
 6ca:	f8 cf       	rjmp	.-16     	; 0x6bc <__floatsisf+0x1c>
 6cc:	fa f4       	brpl	.+62     	; 0x70c <__floatsisf+0x6c>
 6ce:	bb 0f       	add	r27, r27
 6d0:	11 f4       	brne	.+4      	; 0x6d6 <__floatsisf+0x36>
 6d2:	60 ff       	sbrs	r22, 0
 6d4:	1b c0       	rjmp	.+54     	; 0x70c <__floatsisf+0x6c>
 6d6:	6f 5f       	subi	r22, 0xFF	; 255
 6d8:	7f 4f       	sbci	r23, 0xFF	; 255
 6da:	8f 4f       	sbci	r24, 0xFF	; 255
 6dc:	9f 4f       	sbci	r25, 0xFF	; 255
 6de:	16 c0       	rjmp	.+44     	; 0x70c <__floatsisf+0x6c>
 6e0:	88 23       	and	r24, r24
 6e2:	11 f0       	breq	.+4      	; 0x6e8 <__floatsisf+0x48>
 6e4:	96 e9       	ldi	r25, 0x96	; 150
 6e6:	11 c0       	rjmp	.+34     	; 0x70a <__floatsisf+0x6a>
 6e8:	77 23       	and	r23, r23
 6ea:	21 f0       	breq	.+8      	; 0x6f4 <__floatsisf+0x54>
 6ec:	9e e8       	ldi	r25, 0x8E	; 142
 6ee:	87 2f       	mov	r24, r23
 6f0:	76 2f       	mov	r23, r22
 6f2:	05 c0       	rjmp	.+10     	; 0x6fe <__floatsisf+0x5e>
 6f4:	66 23       	and	r22, r22
 6f6:	71 f0       	breq	.+28     	; 0x714 <__floatsisf+0x74>
 6f8:	96 e8       	ldi	r25, 0x86	; 134
 6fa:	86 2f       	mov	r24, r22
 6fc:	70 e0       	ldi	r23, 0x00	; 0
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	2a f0       	brmi	.+10     	; 0x70c <__floatsisf+0x6c>
 702:	9a 95       	dec	r25
 704:	66 0f       	add	r22, r22
 706:	77 1f       	adc	r23, r23
 708:	88 1f       	adc	r24, r24
 70a:	da f7       	brpl	.-10     	; 0x702 <__floatsisf+0x62>
 70c:	88 0f       	add	r24, r24
 70e:	96 95       	lsr	r25
 710:	87 95       	ror	r24
 712:	97 f9       	bld	r25, 7
 714:	08 95       	ret

00000716 <__fp_cmp>:
 716:	99 0f       	add	r25, r25
 718:	00 08       	sbc	r0, r0
 71a:	55 0f       	add	r21, r21
 71c:	aa 0b       	sbc	r26, r26
 71e:	e0 e8       	ldi	r30, 0x80	; 128
 720:	fe ef       	ldi	r31, 0xFE	; 254
 722:	16 16       	cp	r1, r22
 724:	17 06       	cpc	r1, r23
 726:	e8 07       	cpc	r30, r24
 728:	f9 07       	cpc	r31, r25
 72a:	c0 f0       	brcs	.+48     	; 0x75c <__fp_cmp+0x46>
 72c:	12 16       	cp	r1, r18
 72e:	13 06       	cpc	r1, r19
 730:	e4 07       	cpc	r30, r20
 732:	f5 07       	cpc	r31, r21
 734:	98 f0       	brcs	.+38     	; 0x75c <__fp_cmp+0x46>
 736:	62 1b       	sub	r22, r18
 738:	73 0b       	sbc	r23, r19
 73a:	84 0b       	sbc	r24, r20
 73c:	95 0b       	sbc	r25, r21
 73e:	39 f4       	brne	.+14     	; 0x74e <__fp_cmp+0x38>
 740:	0a 26       	eor	r0, r26
 742:	61 f0       	breq	.+24     	; 0x75c <__fp_cmp+0x46>
 744:	23 2b       	or	r18, r19
 746:	24 2b       	or	r18, r20
 748:	25 2b       	or	r18, r21
 74a:	21 f4       	brne	.+8      	; 0x754 <__fp_cmp+0x3e>
 74c:	08 95       	ret
 74e:	0a 26       	eor	r0, r26
 750:	09 f4       	brne	.+2      	; 0x754 <__fp_cmp+0x3e>
 752:	a1 40       	sbci	r26, 0x01	; 1
 754:	a6 95       	lsr	r26
 756:	8f ef       	ldi	r24, 0xFF	; 255
 758:	81 1d       	adc	r24, r1
 75a:	81 1d       	adc	r24, r1
 75c:	08 95       	ret

0000075e <__fp_inf>:
 75e:	97 f9       	bld	r25, 7
 760:	9f 67       	ori	r25, 0x7F	; 127
 762:	80 e8       	ldi	r24, 0x80	; 128
 764:	70 e0       	ldi	r23, 0x00	; 0
 766:	60 e0       	ldi	r22, 0x00	; 0
 768:	08 95       	ret

0000076a <__fp_nan>:
 76a:	9f ef       	ldi	r25, 0xFF	; 255
 76c:	80 ec       	ldi	r24, 0xC0	; 192
 76e:	08 95       	ret

00000770 <__fp_pscA>:
 770:	00 24       	eor	r0, r0
 772:	0a 94       	dec	r0
 774:	16 16       	cp	r1, r22
 776:	17 06       	cpc	r1, r23
 778:	18 06       	cpc	r1, r24
 77a:	09 06       	cpc	r0, r25
 77c:	08 95       	ret

0000077e <__fp_pscB>:
 77e:	00 24       	eor	r0, r0
 780:	0a 94       	dec	r0
 782:	12 16       	cp	r1, r18
 784:	13 06       	cpc	r1, r19
 786:	14 06       	cpc	r1, r20
 788:	05 06       	cpc	r0, r21
 78a:	08 95       	ret

0000078c <__fp_round>:
 78c:	09 2e       	mov	r0, r25
 78e:	03 94       	inc	r0
 790:	00 0c       	add	r0, r0
 792:	11 f4       	brne	.+4      	; 0x798 <__fp_round+0xc>
 794:	88 23       	and	r24, r24
 796:	52 f0       	brmi	.+20     	; 0x7ac <__fp_round+0x20>
 798:	bb 0f       	add	r27, r27
 79a:	40 f4       	brcc	.+16     	; 0x7ac <__fp_round+0x20>
 79c:	bf 2b       	or	r27, r31
 79e:	11 f4       	brne	.+4      	; 0x7a4 <__fp_round+0x18>
 7a0:	60 ff       	sbrs	r22, 0
 7a2:	04 c0       	rjmp	.+8      	; 0x7ac <__fp_round+0x20>
 7a4:	6f 5f       	subi	r22, 0xFF	; 255
 7a6:	7f 4f       	sbci	r23, 0xFF	; 255
 7a8:	8f 4f       	sbci	r24, 0xFF	; 255
 7aa:	9f 4f       	sbci	r25, 0xFF	; 255
 7ac:	08 95       	ret

000007ae <__fp_split3>:
 7ae:	57 fd       	sbrc	r21, 7
 7b0:	90 58       	subi	r25, 0x80	; 128
 7b2:	44 0f       	add	r20, r20
 7b4:	55 1f       	adc	r21, r21
 7b6:	59 f0       	breq	.+22     	; 0x7ce <__fp_splitA+0x10>
 7b8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ba:	71 f0       	breq	.+28     	; 0x7d8 <__fp_splitA+0x1a>
 7bc:	47 95       	ror	r20

000007be <__fp_splitA>:
 7be:	88 0f       	add	r24, r24
 7c0:	97 fb       	bst	r25, 7
 7c2:	99 1f       	adc	r25, r25
 7c4:	61 f0       	breq	.+24     	; 0x7de <__fp_splitA+0x20>
 7c6:	9f 3f       	cpi	r25, 0xFF	; 255
 7c8:	79 f0       	breq	.+30     	; 0x7e8 <__fp_splitA+0x2a>
 7ca:	87 95       	ror	r24
 7cc:	08 95       	ret
 7ce:	12 16       	cp	r1, r18
 7d0:	13 06       	cpc	r1, r19
 7d2:	14 06       	cpc	r1, r20
 7d4:	55 1f       	adc	r21, r21
 7d6:	f2 cf       	rjmp	.-28     	; 0x7bc <__fp_split3+0xe>
 7d8:	46 95       	lsr	r20
 7da:	f1 df       	rcall	.-30     	; 0x7be <__fp_splitA>
 7dc:	08 c0       	rjmp	.+16     	; 0x7ee <__fp_splitA+0x30>
 7de:	16 16       	cp	r1, r22
 7e0:	17 06       	cpc	r1, r23
 7e2:	18 06       	cpc	r1, r24
 7e4:	99 1f       	adc	r25, r25
 7e6:	f1 cf       	rjmp	.-30     	; 0x7ca <__fp_splitA+0xc>
 7e8:	86 95       	lsr	r24
 7ea:	71 05       	cpc	r23, r1
 7ec:	61 05       	cpc	r22, r1
 7ee:	08 94       	sec
 7f0:	08 95       	ret

000007f2 <__fp_zero>:
 7f2:	e8 94       	clt

000007f4 <__fp_szero>:
 7f4:	bb 27       	eor	r27, r27
 7f6:	66 27       	eor	r22, r22
 7f8:	77 27       	eor	r23, r23
 7fa:	cb 01       	movw	r24, r22
 7fc:	97 f9       	bld	r25, 7
 7fe:	08 95       	ret

00000800 <log10>:
 800:	0a d0       	rcall	.+20     	; 0x816 <log>
 802:	29 ed       	ldi	r18, 0xD9	; 217
 804:	3b e5       	ldi	r19, 0x5B	; 91
 806:	4e ed       	ldi	r20, 0xDE	; 222
 808:	5e e3       	ldi	r21, 0x3E	; 62
 80a:	45 c0       	rjmp	.+138    	; 0x896 <__mulsf3>
 80c:	0e f0       	brts	.+2      	; 0x810 <log10+0x10>
 80e:	a6 c0       	rjmp	.+332    	; 0x95c <__fp_mpack>
 810:	ac cf       	rjmp	.-168    	; 0x76a <__fp_nan>
 812:	68 94       	set
 814:	a4 cf       	rjmp	.-184    	; 0x75e <__fp_inf>

00000816 <log>:
 816:	d3 df       	rcall	.-90     	; 0x7be <__fp_splitA>
 818:	c8 f3       	brcs	.-14     	; 0x80c <log10+0xc>
 81a:	99 23       	and	r25, r25
 81c:	d1 f3       	breq	.-12     	; 0x812 <log10+0x12>
 81e:	c6 f3       	brts	.-16     	; 0x810 <log10+0x10>
 820:	df 93       	push	r29
 822:	cf 93       	push	r28
 824:	1f 93       	push	r17
 826:	0f 93       	push	r16
 828:	ff 92       	push	r15
 82a:	c9 2f       	mov	r28, r25
 82c:	dd 27       	eor	r29, r29
 82e:	88 23       	and	r24, r24
 830:	2a f0       	brmi	.+10     	; 0x83c <log+0x26>
 832:	21 97       	sbiw	r28, 0x01	; 1
 834:	66 0f       	add	r22, r22
 836:	77 1f       	adc	r23, r23
 838:	88 1f       	adc	r24, r24
 83a:	da f7       	brpl	.-10     	; 0x832 <log+0x1c>
 83c:	20 e0       	ldi	r18, 0x00	; 0
 83e:	30 e0       	ldi	r19, 0x00	; 0
 840:	40 e8       	ldi	r20, 0x80	; 128
 842:	5f eb       	ldi	r21, 0xBF	; 191
 844:	9f e3       	ldi	r25, 0x3F	; 63
 846:	88 39       	cpi	r24, 0x98	; 152
 848:	20 f0       	brcs	.+8      	; 0x852 <log+0x3c>
 84a:	80 3e       	cpi	r24, 0xE0	; 224
 84c:	30 f0       	brcs	.+12     	; 0x85a <log+0x44>
 84e:	21 96       	adiw	r28, 0x01	; 1
 850:	8f 77       	andi	r24, 0x7F	; 127
 852:	23 de       	rcall	.-954    	; 0x49a <__addsf3>
 854:	e6 e2       	ldi	r30, 0x26	; 38
 856:	f0 e0       	ldi	r31, 0x00	; 0
 858:	03 c0       	rjmp	.+6      	; 0x860 <log+0x4a>
 85a:	1f de       	rcall	.-962    	; 0x49a <__addsf3>
 85c:	e3 e5       	ldi	r30, 0x53	; 83
 85e:	f0 e0       	ldi	r31, 0x00	; 0
 860:	8b d0       	rcall	.+278    	; 0x978 <__fp_powser>
 862:	8b 01       	movw	r16, r22
 864:	be 01       	movw	r22, r28
 866:	ec 01       	movw	r28, r24
 868:	fb 2e       	mov	r15, r27
 86a:	6f 57       	subi	r22, 0x7F	; 127
 86c:	71 09       	sbc	r23, r1
 86e:	75 95       	asr	r23
 870:	77 1f       	adc	r23, r23
 872:	88 0b       	sbc	r24, r24
 874:	99 0b       	sbc	r25, r25
 876:	14 df       	rcall	.-472    	; 0x6a0 <__floatsisf>
 878:	28 e1       	ldi	r18, 0x18	; 24
 87a:	32 e7       	ldi	r19, 0x72	; 114
 87c:	41 e3       	ldi	r20, 0x31	; 49
 87e:	5f e3       	ldi	r21, 0x3F	; 63
 880:	16 d0       	rcall	.+44     	; 0x8ae <__mulsf3x>
 882:	af 2d       	mov	r26, r15
 884:	98 01       	movw	r18, r16
 886:	ae 01       	movw	r20, r28
 888:	ff 90       	pop	r15
 88a:	0f 91       	pop	r16
 88c:	1f 91       	pop	r17
 88e:	cf 91       	pop	r28
 890:	df 91       	pop	r29
 892:	14 de       	rcall	.-984    	; 0x4bc <__addsf3x>
 894:	7b cf       	rjmp	.-266    	; 0x78c <__fp_round>

00000896 <__mulsf3>:
 896:	0b d0       	rcall	.+22     	; 0x8ae <__mulsf3x>
 898:	79 cf       	rjmp	.-270    	; 0x78c <__fp_round>
 89a:	6a df       	rcall	.-300    	; 0x770 <__fp_pscA>
 89c:	28 f0       	brcs	.+10     	; 0x8a8 <__mulsf3+0x12>
 89e:	6f df       	rcall	.-290    	; 0x77e <__fp_pscB>
 8a0:	18 f0       	brcs	.+6      	; 0x8a8 <__mulsf3+0x12>
 8a2:	95 23       	and	r25, r21
 8a4:	09 f0       	breq	.+2      	; 0x8a8 <__mulsf3+0x12>
 8a6:	5b cf       	rjmp	.-330    	; 0x75e <__fp_inf>
 8a8:	60 cf       	rjmp	.-320    	; 0x76a <__fp_nan>
 8aa:	11 24       	eor	r1, r1
 8ac:	a3 cf       	rjmp	.-186    	; 0x7f4 <__fp_szero>

000008ae <__mulsf3x>:
 8ae:	7f df       	rcall	.-258    	; 0x7ae <__fp_split3>
 8b0:	a0 f3       	brcs	.-24     	; 0x89a <__mulsf3+0x4>

000008b2 <__mulsf3_pse>:
 8b2:	95 9f       	mul	r25, r21
 8b4:	d1 f3       	breq	.-12     	; 0x8aa <__mulsf3+0x14>
 8b6:	95 0f       	add	r25, r21
 8b8:	50 e0       	ldi	r21, 0x00	; 0
 8ba:	55 1f       	adc	r21, r21
 8bc:	62 9f       	mul	r22, r18
 8be:	f0 01       	movw	r30, r0
 8c0:	72 9f       	mul	r23, r18
 8c2:	bb 27       	eor	r27, r27
 8c4:	f0 0d       	add	r31, r0
 8c6:	b1 1d       	adc	r27, r1
 8c8:	63 9f       	mul	r22, r19
 8ca:	aa 27       	eor	r26, r26
 8cc:	f0 0d       	add	r31, r0
 8ce:	b1 1d       	adc	r27, r1
 8d0:	aa 1f       	adc	r26, r26
 8d2:	64 9f       	mul	r22, r20
 8d4:	66 27       	eor	r22, r22
 8d6:	b0 0d       	add	r27, r0
 8d8:	a1 1d       	adc	r26, r1
 8da:	66 1f       	adc	r22, r22
 8dc:	82 9f       	mul	r24, r18
 8de:	22 27       	eor	r18, r18
 8e0:	b0 0d       	add	r27, r0
 8e2:	a1 1d       	adc	r26, r1
 8e4:	62 1f       	adc	r22, r18
 8e6:	73 9f       	mul	r23, r19
 8e8:	b0 0d       	add	r27, r0
 8ea:	a1 1d       	adc	r26, r1
 8ec:	62 1f       	adc	r22, r18
 8ee:	83 9f       	mul	r24, r19
 8f0:	a0 0d       	add	r26, r0
 8f2:	61 1d       	adc	r22, r1
 8f4:	22 1f       	adc	r18, r18
 8f6:	74 9f       	mul	r23, r20
 8f8:	33 27       	eor	r19, r19
 8fa:	a0 0d       	add	r26, r0
 8fc:	61 1d       	adc	r22, r1
 8fe:	23 1f       	adc	r18, r19
 900:	84 9f       	mul	r24, r20
 902:	60 0d       	add	r22, r0
 904:	21 1d       	adc	r18, r1
 906:	82 2f       	mov	r24, r18
 908:	76 2f       	mov	r23, r22
 90a:	6a 2f       	mov	r22, r26
 90c:	11 24       	eor	r1, r1
 90e:	9f 57       	subi	r25, 0x7F	; 127
 910:	50 40       	sbci	r21, 0x00	; 0
 912:	8a f0       	brmi	.+34     	; 0x936 <__mulsf3_pse+0x84>
 914:	e1 f0       	breq	.+56     	; 0x94e <__mulsf3_pse+0x9c>
 916:	88 23       	and	r24, r24
 918:	4a f0       	brmi	.+18     	; 0x92c <__mulsf3_pse+0x7a>
 91a:	ee 0f       	add	r30, r30
 91c:	ff 1f       	adc	r31, r31
 91e:	bb 1f       	adc	r27, r27
 920:	66 1f       	adc	r22, r22
 922:	77 1f       	adc	r23, r23
 924:	88 1f       	adc	r24, r24
 926:	91 50       	subi	r25, 0x01	; 1
 928:	50 40       	sbci	r21, 0x00	; 0
 92a:	a9 f7       	brne	.-22     	; 0x916 <__mulsf3_pse+0x64>
 92c:	9e 3f       	cpi	r25, 0xFE	; 254
 92e:	51 05       	cpc	r21, r1
 930:	70 f0       	brcs	.+28     	; 0x94e <__mulsf3_pse+0x9c>
 932:	15 cf       	rjmp	.-470    	; 0x75e <__fp_inf>
 934:	5f cf       	rjmp	.-322    	; 0x7f4 <__fp_szero>
 936:	5f 3f       	cpi	r21, 0xFF	; 255
 938:	ec f3       	brlt	.-6      	; 0x934 <__mulsf3_pse+0x82>
 93a:	98 3e       	cpi	r25, 0xE8	; 232
 93c:	dc f3       	brlt	.-10     	; 0x934 <__mulsf3_pse+0x82>
 93e:	86 95       	lsr	r24
 940:	77 95       	ror	r23
 942:	67 95       	ror	r22
 944:	b7 95       	ror	r27
 946:	f7 95       	ror	r31
 948:	e7 95       	ror	r30
 94a:	9f 5f       	subi	r25, 0xFF	; 255
 94c:	c1 f7       	brne	.-16     	; 0x93e <__mulsf3_pse+0x8c>
 94e:	fe 2b       	or	r31, r30
 950:	88 0f       	add	r24, r24
 952:	91 1d       	adc	r25, r1
 954:	96 95       	lsr	r25
 956:	87 95       	ror	r24
 958:	97 f9       	bld	r25, 7
 95a:	08 95       	ret

0000095c <__fp_mpack>:
 95c:	9f 3f       	cpi	r25, 0xFF	; 255
 95e:	31 f0       	breq	.+12     	; 0x96c <__fp_mpack_finite+0xc>

00000960 <__fp_mpack_finite>:
 960:	91 50       	subi	r25, 0x01	; 1
 962:	20 f4       	brcc	.+8      	; 0x96c <__fp_mpack_finite+0xc>
 964:	87 95       	ror	r24
 966:	77 95       	ror	r23
 968:	67 95       	ror	r22
 96a:	b7 95       	ror	r27
 96c:	88 0f       	add	r24, r24
 96e:	91 1d       	adc	r25, r1
 970:	96 95       	lsr	r25
 972:	87 95       	ror	r24
 974:	97 f9       	bld	r25, 7
 976:	08 95       	ret

00000978 <__fp_powser>:
 978:	df 93       	push	r29
 97a:	cf 93       	push	r28
 97c:	1f 93       	push	r17
 97e:	0f 93       	push	r16
 980:	ff 92       	push	r15
 982:	ef 92       	push	r14
 984:	df 92       	push	r13
 986:	7b 01       	movw	r14, r22
 988:	8c 01       	movw	r16, r24
 98a:	68 94       	set
 98c:	05 c0       	rjmp	.+10     	; 0x998 <__fp_powser+0x20>
 98e:	da 2e       	mov	r13, r26
 990:	ef 01       	movw	r28, r30
 992:	8d df       	rcall	.-230    	; 0x8ae <__mulsf3x>
 994:	fe 01       	movw	r30, r28
 996:	e8 94       	clt
 998:	a5 91       	lpm	r26, Z+
 99a:	25 91       	lpm	r18, Z+
 99c:	35 91       	lpm	r19, Z+
 99e:	45 91       	lpm	r20, Z+
 9a0:	55 91       	lpm	r21, Z+
 9a2:	ae f3       	brts	.-22     	; 0x98e <__fp_powser+0x16>
 9a4:	ef 01       	movw	r28, r30
 9a6:	8a dd       	rcall	.-1260   	; 0x4bc <__addsf3x>
 9a8:	fe 01       	movw	r30, r28
 9aa:	97 01       	movw	r18, r14
 9ac:	a8 01       	movw	r20, r16
 9ae:	da 94       	dec	r13
 9b0:	79 f7       	brne	.-34     	; 0x990 <__fp_powser+0x18>
 9b2:	df 90       	pop	r13
 9b4:	ef 90       	pop	r14
 9b6:	ff 90       	pop	r15
 9b8:	0f 91       	pop	r16
 9ba:	1f 91       	pop	r17
 9bc:	cf 91       	pop	r28
 9be:	df 91       	pop	r29
 9c0:	08 95       	ret

000009c2 <__divmodhi4>:
 9c2:	97 fb       	bst	r25, 7
 9c4:	07 2e       	mov	r0, r23
 9c6:	16 f4       	brtc	.+4      	; 0x9cc <__divmodhi4+0xa>
 9c8:	00 94       	com	r0
 9ca:	06 d0       	rcall	.+12     	; 0x9d8 <__divmodhi4_neg1>
 9cc:	77 fd       	sbrc	r23, 7
 9ce:	08 d0       	rcall	.+16     	; 0x9e0 <__divmodhi4_neg2>
 9d0:	0b d0       	rcall	.+22     	; 0x9e8 <__udivmodhi4>
 9d2:	07 fc       	sbrc	r0, 7
 9d4:	05 d0       	rcall	.+10     	; 0x9e0 <__divmodhi4_neg2>
 9d6:	3e f4       	brtc	.+14     	; 0x9e6 <__divmodhi4_exit>

000009d8 <__divmodhi4_neg1>:
 9d8:	90 95       	com	r25
 9da:	81 95       	neg	r24
 9dc:	9f 4f       	sbci	r25, 0xFF	; 255
 9de:	08 95       	ret

000009e0 <__divmodhi4_neg2>:
 9e0:	70 95       	com	r23
 9e2:	61 95       	neg	r22
 9e4:	7f 4f       	sbci	r23, 0xFF	; 255

000009e6 <__divmodhi4_exit>:
 9e6:	08 95       	ret

000009e8 <__udivmodhi4>:
 9e8:	aa 1b       	sub	r26, r26
 9ea:	bb 1b       	sub	r27, r27
 9ec:	51 e1       	ldi	r21, 0x11	; 17
 9ee:	07 c0       	rjmp	.+14     	; 0x9fe <__udivmodhi4_ep>

000009f0 <__udivmodhi4_loop>:
 9f0:	aa 1f       	adc	r26, r26
 9f2:	bb 1f       	adc	r27, r27
 9f4:	a6 17       	cp	r26, r22
 9f6:	b7 07       	cpc	r27, r23
 9f8:	10 f0       	brcs	.+4      	; 0x9fe <__udivmodhi4_ep>
 9fa:	a6 1b       	sub	r26, r22
 9fc:	b7 0b       	sbc	r27, r23

000009fe <__udivmodhi4_ep>:
 9fe:	88 1f       	adc	r24, r24
 a00:	99 1f       	adc	r25, r25
 a02:	5a 95       	dec	r21
 a04:	a9 f7       	brne	.-22     	; 0x9f0 <__udivmodhi4_loop>
 a06:	80 95       	com	r24
 a08:	90 95       	com	r25
 a0a:	bc 01       	movw	r22, r24
 a0c:	cd 01       	movw	r24, r26
 a0e:	08 95       	ret

00000a10 <_exit>:
 a10:	f8 94       	cli

00000a12 <__stop_program>:
 a12:	ff cf       	rjmp	.-2      	; 0xa12 <__stop_program>
